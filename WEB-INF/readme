
subscription-manager register --username=<user_name> --password=<password>
subscription-manager refresh
subscription-manager list --available --matches '*OpenShift*'
subscription-manager attach --pool=<pool_id>
subscription-manager repos \
    --enable="rhel-7-server-rpms" \
    --enable="rhel-7-server-extras-rpms" \
    --enable="rhel-7-server-ansible-2.9-rpms" \
    --enable="rhel-7-server-ose-4.5-rpms"

@@@@@@@@@@@
@@ REPO
yum install -y httpd

mkdir /var/www/html/repos
chmod -R +r /var/www/html/repos
restorecon -vR /var/www/html/

reposync -l -n .
createrepo --workers=5 rhel-7-server-extras-rpms; createrepo --workers=5 rhel-7-server-ose-3.2-rpms; createrepo --workers=5 rhel-7-server-rpms;

#!/bin/sh
for repo in \
rhel-7-server-rpms \
rhel-7-server-extras-rpms \
rhel-7-server-ansible-2.9-rpms \
rhel-7-server-ose-4.5-rpms
do
  reposync -mln --repo=${repo} -p /var/www/html/repos
  createrepo -v /var/www/html/repos/${repo} -o /var/www/html/repos/${repo}
done


@@@@@@@@@@@

{"auths":{"cloud.openshift.com":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfZjIzYzczNjA4YzJiNDZjMmFjODRhNzAyOTI5MWM4ZDI6UTI5MzI2T1pNWjE2NVBBMlhZVllKMExHSEMxNkwyUTNBQU1QT01SVTg5Sko5TUdLNUpTUVU3OUwxR0pUNjJRSQ==","email":"0703005@okfngroup.com"},"quay.io":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfZjIzYzczNjA4YzJiNDZjMmFjODRhNzAyOTI5MWM4ZDI6UTI5MzI2T1pNWjE2NVBBMlhZVllKMExHSEMxNkwyUTNBQU1QT01SVTg5Sko5TUdLNUpTUVU3OUwxR0pUNjJRSQ==","email":"0703005@okfngroup.com"},"registry.connect.redhat.com":{"auth":"fHVoYy0xZndVQ200dEUycVdzZ3lpR2ozazJES2VIVVM6ZXlKaGJHY2lPaUpTVXpVeE1pSjkuZXlKemRXSWlPaUpqTkdRMk5tSmhaakl6WlRJMFkyUTBZbUV6WW1ZMFpEZGhOalJtTTJRMFpTSjkuRlFRYUtKaGxlOTVUdVEzdDVXVWhTMVdtS29ZcjNpM1JyaG0tVWZiSnhjT2FQSHd1ZV9IcUo2TFZoRW5kZHJ6MlhlQ0RGbEVIT0toVjR3ZjNzM2Z4elVma2MyNXBvNWRXYlh6SDZPaFJLRm1qdEhWTG1vSHpKV1VHVFlnME9kTDFuLTVEbXdtY2VyZzU5RXF4SlphdkRfd2VPYnlwMGN2cjRzRlZ3Wlp0N3puU2VCTlBZeXJza2ZqZHNmc3B6ZFdKMXpJMzNyWEh1c0FDbDhMNlJnQUhFMWNKcUFfZ054Q05UMjdXeXFQNEwwb0RkUlBFWlNkdEVCWHJyVXNnZGFzYnJzdHFfbjBCcEFrWXlkVGhoZWp3OHNsZVE1c3RsNjZNRmcxRTRHTzFybGRnSjktanlOaVBNbk91UnZoWDBFVkt0ZlNOUEluMWg5bVBjOGhaZjdjd0Y4TE5oV1FBVkZhQ01vZ1FkaF9EcXlzRnBuRWFTcVM4cDkxdEVqNndOUGlWelU2Q2pWaHZfcEdYekVpTmQyMDlnMFJ3endoY1BsdDdUUkp3cDJ4eURVTW53QXNSRnUtNC1zM3J2XzNsWUVPVDZPVVltUWRSWjlGN21xbG4wYUE2MXdaYU1ub2pyVXRydk93clJEMkpXRExjVmNGX1RZY3hzVllNclpRYUxBUmFOMkVJQ3ROQ1JRQUw5cFdrVy0ybXdCQjk0Q2pQN0VzaDh6MjdWNUlyU2ZVMzBtd0kzdFRwNm9KZng2V1N6eHBSNHFwYlZkOGlWSzlRWmZOci1xZUFWSHp3VEU0blJHMUg1NTFTNFhLX2VXZ21IdEdWQ2Yxb0F4cDQ1cmRweTFoYnhydGU4RUwyUW9JeFdSUGJTQjQwSjU0cHBpZzBSRng4OVFUV216QkJSREU=","email":"0703005@okfngroup.com"},"registry.redhat.io":{"auth":"fHVoYy0xZndVQ200dEUycVdzZ3lpR2ozazJES2VIVVM6ZXlKaGJHY2lPaUpTVXpVeE1pSjkuZXlKemRXSWlPaUpqTkdRMk5tSmhaakl6WlRJMFkyUTBZbUV6WW1ZMFpEZGhOalJtTTJRMFpTSjkuRlFRYUtKaGxlOTVUdVEzdDVXVWhTMVdtS29ZcjNpM1JyaG0tVWZiSnhjT2FQSHd1ZV9IcUo2TFZoRW5kZHJ6MlhlQ0RGbEVIT0toVjR3ZjNzM2Z4elVma2MyNXBvNWRXYlh6SDZPaFJLRm1qdEhWTG1vSHpKV1VHVFlnME9kTDFuLTVEbXdtY2VyZzU5RXF4SlphdkRfd2VPYnlwMGN2cjRzRlZ3Wlp0N3puU2VCTlBZeXJza2ZqZHNmc3B6ZFdKMXpJMzNyWEh1c0FDbDhMNlJnQUhFMWNKcUFfZ054Q05UMjdXeXFQNEwwb0RkUlBFWlNkdEVCWHJyVXNnZGFzYnJzdHFfbjBCcEFrWXlkVGhoZWp3OHNsZVE1c3RsNjZNRmcxRTRHTzFybGRnSjktanlOaVBNbk91UnZoWDBFVkt0ZlNOUEluMWg5bVBjOGhaZjdjd0Y4TE5oV1FBVkZhQ01vZ1FkaF9EcXlzRnBuRWFTcVM4cDkxdEVqNndOUGlWelU2Q2pWaHZfcEdYekVpTmQyMDlnMFJ3endoY1BsdDdUUkp3cDJ4eURVTW53QXNSRnUtNC1zM3J2XzNsWUVPVDZPVVltUWRSWjlGN21xbG4wYUE2MXdaYU1ub2pyVXRydk93clJEMkpXRExjVmNGX1RZY3hzVllNclpRYUxBUmFOMkVJQ3ROQ1JRQUw5cFdrVy0ybXdCQjk0Q2pQN0VzaDh6MjdWNUlyU2ZVMzBtd0kzdFRwNm9KZng2V1N6eHBSNHFwYlZkOGlWSzlRWmZOci1xZUFWSHp3VEU0blJHMUg1NTFTNFhLX2VXZ21IdEdWQ2Yxb0F4cDQ1cmRweTFoYnhydGU4RUwyUW9JeFdSUGJTQjQwSjU0cHBpZzBSRng4OVFUV216QkJSREUAA=","email":"AA"}}}




#1 [[ PRIVATE MIRROR-REGISTRY ]]

HOSTNAME : registry.ocp4.thkose.local

##########################################################################
##
##  MIRROR REGISTRY
@@@@@@@

yum -y install podman skopeo buildah jq httpd-tools net-tools bind-utils
# yum -y install podman skopeo buildah pigz jq python3-pip python3

mkdir -p /registry-data/registry/{auth,certs,data}
cd /registry-data/registry/certs

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ for external registry
openssl req \
   -newkey rsa:2048 -nodes -keyout mregistry.ocp4.thkose.local.key \
   -x509 -days 36500 -out mregistry.ocp4.thkose.local.crt -subj \
   "/C=KR/ST=Seoul/L=Seoul/O=RedHat Korea/OU=GPS Service/CN=*.ocp4.thkose.local"

cp /registry-data/registry/certs/mregistry.ocp4.thkose.local.crt /etc/pki/ca-trust/source/anchors/
update-ca-trust extract

podman run --name mirror-registry -p 5000:5000 \
     -v /registry-data/registry/data:/var/lib/registry:z \
     -v /registry-data/registry/auth:/auth:z \
     -v /registry-data/registry/certs:/certs:z \
     -e "REGISTRY_AUTH=htpasswd" \
     -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
     -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
     -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/mregistry.ocp4.thkose.local.crt \
     -e REGISTRY_HTTP_TLS_KEY=/certs/mregistry.ocp4.thkose.local.key \
     -d docker.io/library/registry:2.7

curl -u admin:redhat https://mregistry.ocp4.thkose.local:5000/v2/_catalog
podman login https://mregistry.ocp4.thkose.local:5000
@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ for internal registry
#openssl req -newkey rsa:4096 -nodes -sha256 -keyout registry.ocp4.thkose.local.key -x509 -days 36500 -out registry.ocp4.thkose.local.crt
openssl req \
   -newkey rsa:2048 -nodes -keyout registry.ocp4.thkose.local.key \
   -x509 -days 36500 -out registry.ocp4.thkose.local.crt -subj \
   "/C=KR/ST=Seoul/L=Seoul/O=RedHat Korea/OU=GPS Service/CN=*.ocp4.thkose.local"


cp /registry-data/registry/certs/registry.ocp4.thkose.local.crt /etc/pki/ca-trust/source/anchors/
update-ca-trust extract

htpasswd -bBc /registry-data/registry/auth/htpasswd admin redhat
htpasswd -bB /registry-data/registry/auth/htpasswd redhat redhat

@@ for local registry.
podman run --name mirror-registry -p 5000:5000 \
     -v /registry-data/registry/data:/var/lib/registry:z \
     -v /registry-data/registry/auth:/auth:z \
     -v /registry-data/registry/certs:/certs:z \
     -e "REGISTRY_AUTH=htpasswd" \
     -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
     -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
     -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.ocp4.thkose.local.crt \
     -e REGISTRY_HTTP_TLS_KEY=/certs/registry.ocp4.thkose.local.key \
     -d docker.io/library/registry:2.7


@ check
curl -u admin:redhat https://registry.ocp4.thkose.local:5000/v2/_catalog
podman login https://registry.ocp4.thkose.local:5000
@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

cd /data
echo -n 'admin:redhat2020!' | base64 -w0
echo -n 'admin:redhat' | base64 -w0

cat ./pull-secret.text | jq .  > pull-secret.json
cat ./pull-secret.json | jq -c > pull-secret-trim.json

@@@@@@@@ With External Registry
export OCP_RELEASE="4.5.3-x86_64"
export LOCAL_REGISTRY='mregistry.ocp4.thkose.local:5000' 
export LOCAL_REPOSITORY='ocp4/openshift4'
export LOCAL_SECRET_JSON="/data/pull-secret.json" 
export PRODUCT_REPO='openshift-release-dev' 
export RELEASE_NAME="ocp-release"

@@@@@@@@ With Internal Registry
export OCP_RELEASE="4.5.3-x86_64"
export LOCAL_REGISTRY='registry.ocp4.thkose.local:5000' 
export LOCAL_REPOSITORY='ocp4/openshift4'
export LOCAL_SECRET_JSON="/data/pull-secret.json" 
export PRODUCT_REPO='openshift-release-dev' 
export RELEASE_NAME="ocp-release"

@@quay.io/openshift-release-dev/ocp-release:${OCP_RELEASE}

oc adm -a ${LOCAL_SECRET_JSON} release mirror \
     --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE} \
     --to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} \
     --to-release-image=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}:${OCP_RELEASE}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Success
Update image:  mregistry.ocp4.thkose.local:5000/ocp4/openshift4:4.5.3-x86_64
Mirror prefix: mregistry.ocp4.thkose.local:5000/ocp4/openshift4

To use the new mirrored repository to install, add the following section to the install-config.yaml:

imageContentSources:
- mirrors:
  - mregistry.ocp4.thkose.local:5000/ocp4/openshift4
  source: quay.io/openshift-release-dev/ocp-release
- mirrors:
  - mregistry.ocp4.thkose.local:5000/ocp4/openshift4
  source: quay.io/openshift-release-dev/ocp-v4.0-art-dev


To use the new mirrored repository for upgrades, use the following to create an ImageContentSourcePolicy:

apiVersion: operator.openshift.io/v1alpha1
kind: ImageContentSourcePolicy
metadata:
  name: example
spec:
  repositoryDigestMirrors:
  - mirrors:
    - mregistry.ocp4.thkose.local:5000/ocp4/openshift4
    source: quay.io/openshift-release-dev/ocp-release
  - mirrors:
    - mregistry.ocp4.thkose.local:5000/ocp4/openshift4
    source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@
oc adm release info --registry-config=/data/pull-secret.json mregistry.ocp4.thkose.local:5000/ocp4/openshift4:4.5.3-x86_64

cat aa | awk '{print "podman pull --authfile=/data/pull-secret.json registry.ocp4.thkose.local:5000/ocp4/openshift4@"$2}' > rhocp-chimg-453.sh

podman rmi $(podman images | grep -i mregistry | awk '{print $3}')


@@@
export OCP_RELEASE="4.3.1-x86_64"
export LOCAL_REGISTRY='mregistry.ocp4.thkose.local:5000' 
export LOCAL_REPOSITORY='ocp4/openshift4'
export PRODUCT_REPO='openshift-release-dev' 
export LOCAL_SECRET_JSON="/root/ocp-install/pull-secret.json" 
export RELEASE_NAME="ocp-release"

oc adm -a ${LOCAL_SECRET_JSON} release mirror \
     --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE} \
     --to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} \
     --to-release-image=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}:${OCP_RELEASE}

@@@
oc adm release info --registry-config=/root/ocp-install/pull-secret.json mregistry.ocp4.thkose.local:5000/ocp4/openshift4:4.3.1-x86_64

cat bb | awk '{print "podman pull --authfile=/root/ocp-install/pull-secret.json mregistry.ocp4.thkose.local:5000/ocp4/openshift4@"$2}' > rhocp-chimg-431.sh


podman rmi $(podman images | grep -i registry | awk '{print $3}')

@ for private registry
firewall-cmd --add-port=5000/tcp --permanent 
firewall-cmd --add-port 5000/tcp --zone=internal --permanent
firewall-cmd --add-port 5000/tcp --zone=external --permanent

@ for rsync
firewall-cmd --add-port=873/tcp --permanent 
firewall-cmd --add-port 873/tcp --zone=internal --permanent
firewall-cmd --add-port 873/tcp --zone=external --permanent

firewall-cmd --permanent --add-port=22623/tcp
firewall-cmd --permanent --add-port=6443/tcp
firewall-cmd --permanent --add-service=https
firewall-cmd --permanent --add-service=http
firewall-cmd --add-port 22623/tcp --zone=internal --permanent
firewall-cmd --add-port 6443/tcp --zone=internal --permanent
firewall-cmd --add-service https --zone=internal --permanent
firewall-cmd --add-service http --zone=internal --permanent
firewall-cmd --add-port 6443/tcp --zone=external --permanent
firewall-cmd --add-service https --zone=external --permanent
firewall-cmd --add-service http --zone=external --permanent

##
##
##########################################################################




